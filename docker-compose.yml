services:
  web-app:
    build: .
    container_name: "web_app"
    command: python /application/user_services/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./user_services:/application/user_services
    ports:
      - "8000:8000"
    depends_on:
      - database
    env_file:
      - .env

  database:
    image: postgres:16.9-alpine3.22
    container_name: "database_container"
    hostname: "database"
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"      
    env_file:
      - .env

  worker:
    build: .
    container_name: "celery_worker"
    entrypoint: celery
    command: -A core worker --loglevel=INFO
    volumes:
      - ./user_services:/application/user_services
    depends_on:
      - database
      - rabbitmq
    env_file:
      - .env
    links:
      - rabbitmq
    environment:
      - PYTHONPATH=/application/user_services

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    ports:
     - "5672:5672"
     - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: $RABBIT_USER
      RABBITMQ_DEFAULT_PASS: $RABBIT_PASS
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    env_file:
      - .env

volumes:
  postgres_data:
  rabbitmq_data:
